name: Run Playwright Tests

on:
  push:
    branches:
      - master 
    paths-ignore:
      - '**.md' 
  pull_request:
    branches: master 
    paths-ignore:
      - '**.md' 

jobs:
  test:
    timeout-minutes: 10 # Ограничение времени выполнения job
    runs-on: ${{ matrix.os }}

    # Определение матрицы для запуска тестов на разных операционных системах и браузерах
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest] # Запуск на Ubuntu, Windows и macOS
        browser: [chromium, firefox] # Браузеры для тестирования
        include:
          - os: macos-latest
            browser: webkit # Добавление Safari (webkit) для macOS

    steps:
      - uses: actions/checkout@v4 # Клонирование репозитория

      - uses: actions/setup-node@v4 # Настройка Node.js
        with:
          node-version: lts/*

      - name: Install dependencies without downloading browsers
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
        run: yarn install

      - name: Install specific Playwright Browser
        run: |
          if [ "${{ matrix.browser }}" == "chromium" ]; then
            npx playwright install chromium
          elif [ "${{ matrix.browser }}" == "firefox" ]; then
            npx playwright install firefox
          elif [ "${{ matrix.browser }}" == "webkit" ]; then
            npx playwright install webkit
          fi
        shell: bash

      - name: Run Playwright tests
        run: |
          yarn playwright test --project=${{ matrix.browser }} --reporter=list

      - name: Generate Allure Report
        if: always()
        run: |
          yarn run allure generate allure-results --clean -o allure-report

      # Загружаем Allure отчет как артефакт для публикации на GitHub Pages
      - name: Upload Allure Report Artifact
        if: always()
        uses: actions/upload-pages-artifact@v1
        with:
          path: allure-report # Путь к сгенерированному отчету Allure для публикации

  # Публикация Allure отчета на GitHub Pages
  deploy:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v1
